allprojects {
    group = 'io.lw900925.ocean'
    version = '0.0.1-SNAPSHOT'
}

buildscript {
    ext {
        kotlinVersion = '1.4.32'
        springBootVersion = '2.4.5'
    }
    repositories {
        maven {
            url "https://maven.aliyun.com/nexus/content/groups/public"
        }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
    }
}

// 所有子项目通用配置
subprojects {
    apply plugin: 'kotlin'
    apply plugin: 'kotlin-spring'
    apply plugin: 'kotlin-jpa'
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    ext {
        springSecurityOAuth2AutoConfigurationVersion = "2.1.18.RELEASE"
        mysqlConnectorVersion = "6.0.6"
        guavaVersion = "26.0-jre"
        springfoxVersion = "3.0.0"
        hibernateValidatorVersion = "7.0.1.Final"
        mybatisSpringBootStarterVersion = "2.1.4"
        mybatisTypeHandlersJsr310Version = "1.0.2"
        apacheCommonsLang3Version = "3.11"
    }

    repositories {
        maven {
            url "https://maven.aliyun.com/nexus/content/groups/public"
        }
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        // Kotlin support
        implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
        implementation("org.jetbrains.kotlin:kotlin-reflect")

        implementation("com.google.guava:guava:${guavaVersion}")
        implementation("org.hibernate.validator:hibernate-validator:${hibernateValidatorVersion}")
        implementation("org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisSpringBootStarterVersion}")
        implementation("org.mybatis:mybatis-typehandlers-jsr310:${mybatisTypeHandlersJsr310Version}")
        implementation("org.apache.commons:commons-lang3:${apacheCommonsLang3Version}")

        compileOnly("org.springframework.boot:spring-boot-configuration-processor")

        testImplementation('org.springframework.boot:spring-boot-starter-test')

        annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
    }

    test {
        useJUnitPlatform()
    }

    processResources {
        from("src/main/java") {
            include("**/*.xml")
        }
    }

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    compileJava.dependsOn(processResources)

    // To tell IDEA download source and javadoc
    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }

    tasks.withType(Javadoc) {
        options.addStringOption("Xdoclint:none", "-quiet")
        options.addStringOption("encoding", "UTF-8")
        options.addStringOption("charSet", "UTF-8")
    }
}